<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Theory of Machines</title>
    <link>https://ozkansafak.github.io/posts/</link>
    <description>Recent content in Posts on Theory of Machines</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Nov 2017 12:25:25 -0800</lastBuildDate>
    
	<atom:link href="https://ozkansafak.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Semi-supervised Learning</title>
      <link>https://ozkansafak.github.io/posts/semi-supervised-learning/</link>
      <pubDate>Tue, 28 Nov 2017 12:25:25 -0800</pubDate>
      
      <guid>https://ozkansafak.github.io/posts/semi-supervised-learning/</guid>
      <description>Semi-supervised learning is a class of supervised learning tasks and techniques that also make use of unlabeled data for training â€“ typically a small amount of labeled data with a large amount of unlabeled data.
The Data - STL-10 In this problem we are given 5,000 labeled images and 100,000 unlabeled images. - Colored 96x96 images - Labeled images belong to one of the 10 classes - The unlabeled 100,000 images contain other classes of images as well as the 10 given classes.</description>
    </item>
    
    <item>
      <title>A Collaborative Filtering Model on tensorflow with Nonlinear Cross Features</title>
      <link>https://ozkansafak.github.io/posts/collaborative-filtering-tensorflow/</link>
      <pubDate>Sat, 18 Nov 2017 15:49:35 -0800</pubDate>
      
      <guid>https://ozkansafak.github.io/posts/collaborative-filtering-tensorflow/</guid>
      <description>1. Problem Description We are given a rating matrix $R$ where only a small fraction of the entries are provided; otherwise the rest is missing. The task of a Recommender Model is to predict those missing entries. As in most Machine Learning problems the assumption here is that there&amp;rsquo;s an underlying pattern of how users rate movies.
By the nature of the problem, $R$ is a sparse matrix, where the sparsity comes not from zero entries but from empty records.</description>
    </item>
    
  </channel>
</rss>